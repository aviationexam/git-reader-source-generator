<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net8.0;net9.0</TargetFrameworks>
    <LangVersion>13.0</LangVersion>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <PropertyGroup>
    <UseMicrosoftTestingPlatformRunner>true</UseMicrosoftTestingPlatformRunner>
    <TestingPlatformDotnetTestSupport>true</TestingPlatformDotnetTestSupport>
  </PropertyGroup>

  <Import Project="..\WarningConfiguration.targets" />

  <ItemGroup>
    <PackageReference Include="GitReader" Version="1.10.0" />
    <PackageReference Include="H.Generators.Extensions" Version="1.24.2" />
    <PackageReference Include="H.Generators.Tests.Extensions" Version="1.24.2" />
    <PackageReference Include="Microsoft.Bcl.TimeProvider" Version="8.0.1" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.11.0" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.13.0" PrivateAssets="all" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.13.0" />
    <PackageReference Include="System.ComponentModel.Annotations" Version="5.0.0" />
    <PackageReference Include="Verify.XUnitV3" Version="29.3.0" />
    <PackageReference Include="Verify.SourceGenerators" Version="2.5.0" />
    <PackageReference Include="xunit.v3" Version="2.0.1" />
    <PackageReference Include="xunit.runner.visualstudio" Version="3.0.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net8.0' ">
    <PackageReference Include="System.Text.Json" Version="8.0.5" />
    <PackageReference Include="Microsoft.Extensions.TimeProvider.Testing" Version="8.10.0" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net9.0' ">
    <PackageReference Include="System.Text.Json" Version="9.0.4" />
    <PackageReference Include="Microsoft.Extensions.TimeProvider.Testing" Version="9.4.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\GitReader.SourceGenerator\GitReader.SourceGenerator.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="GitReaderSnapshotTests.*.g.verified.cs">
      <DependentUpon>GitReaderSnapshotTests.cs</DependentUpon>
    </None>
  </ItemGroup>

  <Target Name="ExtractSnapshots" BeforeTargets="Restore;_GenerateRestoreProjectSpec">
    <Message Importance="High" Text="Extracting $(MSBuildProjectDirectory)/../../v-tag-repository.zip to the $(MSBuildProjectDirectory)/../../repository-snapshots" />
    <Message Importance="High" Text="Extracting $(MSBuildProjectDirectory)/../../tag-repository.zip to the $(MSBuildProjectDirectory)/../../repository-snapshots" />
    <Message Importance="High" Text="Extracting $(MSBuildProjectDirectory)/../../no-tag-repository.zip to the $(MSBuildProjectDirectory)/../../repository-snapshots" />

    <Unzip SourceFiles="$(MSBuildProjectDirectory)/../../repository-snapshots/v-tag-repository.zip"
           DestinationFolder="$(MSBuildProjectDirectory)/../../repository-snapshots"
           Condition="!Exists('$(MSBuildProjectDirectory)/../../repository-snapshots/v-tag-repository')"
           OverwriteReadOnlyFiles="true" />

    <Unzip SourceFiles="$(MSBuildProjectDirectory)/../../repository-snapshots/tag-repository.zip"
           DestinationFolder="$(MSBuildProjectDirectory)/../../repository-snapshots"
           Condition="!Exists('$(MSBuildProjectDirectory)/../../repository-snapshots/tag-repository')"
           OverwriteReadOnlyFiles="true" />

    <Unzip SourceFiles="$(MSBuildProjectDirectory)/../../repository-snapshots/no-tag-repository.zip"
           DestinationFolder="$(MSBuildProjectDirectory)/../../repository-snapshots"
           Condition="!Exists('$(MSBuildProjectDirectory)/../../repository-snapshots/no-tag-repository')"
           OverwriteReadOnlyFiles="true" />
  </Target>

</Project>
